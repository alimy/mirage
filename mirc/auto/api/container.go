// Code generated by go-mir. DO NOT EDIT.

package api

import (
	gin "github.com/gin-gonic/gin"
)

type Container interface {
	GetContainer(*gin.Context)
	CreateNewContainer(*gin.Context)
	StartContainer(*gin.Context)
	RestartContainer(*gin.Context)
	StopContainer(*gin.Context)
	RemoveContainer(*gin.Context)
	GetContainerInfo(*gin.Context)
	GetContainerLog(*gin.Context)
	GetContainerAllLog(*gin.Context)
}

// RegisterContainerServant register Container servant to gin
func RegisterContainerServant(e *gin.Engine, s Container) {
	router := e

	// register routes info to router
	router.Handle("GET", "/api/container", s.GetContainer)
	router.Handle("GET", "/api/container/run", s.CreateNewContainer)
	router.Handle("GET", "/api/container/start/:containerId", s.StartContainer)
	router.Handle("GET", "/api/container/restart/:containerId", s.RestartContainer)
	router.Handle("GET", "/api/container/stop/:containerId", s.StopContainer)
	router.Handle("GET", "/api/container/delete/:containerId", s.RemoveContainer)
	router.Handle("GET", "/api/container/info/:containerId", s.GetContainerInfo)
	router.Handle("GET", "/api/container/log/part/:containerId", s.GetContainerLog)
	router.Handle("GET", "/api/container/log/all/:containerId", s.GetContainerAllLog)
}
