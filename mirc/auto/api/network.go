// Code generated by go-mir. DO NOT EDIT.

package api

import (
	"net/http"

	gin "github.com/gin-gonic/gin"
)

type Network interface {
	ListNetwork(*gin.Context)
	NetworkInfo(*gin.Context)
	CreateNetwork(*gin.Context)
	RemoveNetwork(*gin.Context)
	ConnectNetwork(*gin.Context)

	mustEmbedUnimplementedNetworkServant()
}

// RegisterNetworkServant register Network servant to gin
func RegisterNetworkServant(e *gin.Engine, s Network) {
	router := e

	// register routes info to router
	router.Handle("GET", "/api/network", s.ListNetwork)
	router.Handle("GET", "/api/network/info/:networkId", s.NetworkInfo)
	router.Handle("GET", "/api/network/new", s.CreateNetwork)
	router.Handle("GET", "/api/network/delete/:networkId", s.RemoveNetwork)
	router.Handle("GET", "/api/network/container/:networkId/:containerId/:operator", s.ConnectNetwork)
}

// UnimplementedNetworkServant can be embedded to have forward compatible implementations.
type UnimplementedNetworkServant struct {
}

func (UnimplementedNetworkServant) ListNetwork(c *gin.Context) {
	c.String(http.StatusNotImplemented, "method ListNetwork not implemented")
}

func (UnimplementedNetworkServant) NetworkInfo(c *gin.Context) {
	c.String(http.StatusNotImplemented, "method NetworkInfo not implemented")
}

func (UnimplementedNetworkServant) CreateNetwork(c *gin.Context) {
	c.String(http.StatusNotImplemented, "method CreateNetwork not implemented")
}

func (UnimplementedNetworkServant) RemoveNetwork(c *gin.Context) {
	c.String(http.StatusNotImplemented, "method RemoveNetwork not implemented")
}

func (UnimplementedNetworkServant) ConnectNetwork(c *gin.Context) {
	c.String(http.StatusNotImplemented, "method ConnectNetwork not implemented")
}

func (UnimplementedNetworkServant) mustEmbedUnimplementedNetworkServant() {}
